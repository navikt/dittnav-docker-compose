version: '2.4'
services:

  postgres-event-cache:
    container_name: postgres-event-cache
    networks:
      dittnav.docker-internal:
        aliases:
          - postgres-event-cache.dittnav.docker-internal
    image: "postgres:11.5"
    volumes:
      - "dittnav-event-cache-data:/var/lib/postgresql/data"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "dittnav-event-cache-preprod-user"
      POSTGRES_PASSWORD: "testpassword"
      POSTGRES_DB: "dittnav-event-cache-preprod"

  postgres-varselbestiller:
    container_name: postgres-varselbestiller
    networks:
      dittnav.docker-internal:
        aliases:
          - postgres-varselbestiller.dittnav.docker-internal
    image: "postgres:11.5"
    volumes:
      - "dittnav-varselbestiller-data:/var/lib/postgresql/data"
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: "dittnav-varselbestiller-user"
      POSTGRES_PASSWORD: "testpassword"
      POSTGRES_DB: "dittnav-varselbestiller"

  db-datapopulator:
    container_name: db-datapopulator
    networks:
      dittnav.docker-internal:
        aliases:
          - db-datapopulator.dittnav.docker-internal
    image: docker.pkg.github.com/navikt/dittnav-docker-compose/db-datapopulator:latest
    env_file: .env
    depends_on:
      aggregator:
        condition: service_healthy

  zookeeper:
    container_name: zookeeper
    networks:
      dittnav.docker-internal:
        aliases:
          - zookeeper.dittnav.docker-internal
    image: "confluentinc/cp-zookeeper:5.5.0"
    environment:
      ZOOKEEPER_CLIENT_PORT: "2181"
      ZOOKEEPER_TICK_TIME: "2000"

  kafka:
    container_name: kafka
    networks:
      dittnav.docker-internal:
        aliases:
          - kafka.dittnav.docker-internal
    image: "confluentinc/cp-kafka:5.5.0"
    ports:
      - "9092:9092"
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      ADV_HOST: "kafka.dittnav.docker-internal"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper.dittnav.docker-internal:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka.dittnav.docker-internal:9092,PLAINTEXT_HOST://localhost:29092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT"
    healthcheck:
      test: ["CMD-SHELL", "nc -z localhost 9092"]
      interval: 20s
      timeout: 5s
      retries: 8

  schema-registry:
    container_name: schema-registry
    networks:
      dittnav.docker-internal:
        aliases:
          - schema-registry.dittnav.docker-internal
    image: "confluentinc/cp-schema-registry:5.5.0"
    ports:
      - "8081:8081"
    depends_on:
      kafka:
        condition: service_healthy
      zookeeper:
        condition: service_started
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: "PLAINTEXT://kafka.dittnav.docker-internal:9092"
      SCHEMA_REGISTRY_HOST_NAME: "schema-registry.dittnav.docker-internal"
      SCHEMA_REGISTRY_LISTENERS: "http://0.0.0.0:8081"

  oidc-provider:
    container_name: oidc-provider
    networks:
      dittnav.docker-internal:
        aliases:
          - oidc-provider.dittnav.docker-internal
    image: "docker.pkg.github.com/navikt/stub-oidc-provider/stub-oidc-provider:latest"
    ports:
      - "9000:9000"
    environment:
      PORT: "9000"
      CALLBACK_URL: "http://localhost:5000/callback"
      ISSUER: ${OIDC_ISSUER}

  oidc-provider-gui:
    container_name: oidc-provider-gui
    networks:
      dittnav.docker-internal:
        aliases:
          - oidc-provider-gui.dittnav.docker-internal
    image: "docker.pkg.github.com/navikt/pb-oidc-provider-gui/pb-oidc-provider-gui:latest"
    ports:
      - "5000:5000"
    depends_on:
      - oidc-provider
    environment:
      REDIRECT_URL: "http://localhost:3000"
      AUTO_REDIRECT_TO_FRONTEND: "true"

  aggregator:
    container_name: aggregator
    networks:
      dittnav.docker-internal:
        aliases:
          - aggregator.dittnav.docker-internal
    image: "docker.pkg.github.com/navikt/dittnav-event-aggregator/dittnav-event-aggregator:latest"
    mem_limit: '1200m'
    mem_reservation: '1024m'
    ports:
      - "8093:8080"
    env_file: .env
    environment:
      NAIS_CLUSTER_NAME: "local"
      NAIS_NAMESPACE: "q1"
      SENSU_HOST: "stub"
      SENSU_PORT: ""
    depends_on:
      - schema-registry
      - postgres-event-cache
      - oidc-provider-gui
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/internal/isAlive"]
      interval: 2s
      timeout: 2s
      retries: 10

  handler:
    container_name: handler
    networks:
      dittnav.docker-internal:
        aliases:
          - handler.dittnav.docker-internal
    image: "docker.pkg.github.com/navikt/dittnav-event-handler/dittnav-event-handler:latest"
    mem_limit: '768m'
    mem_reservation: '384m'
    ports:
      - "8092:8080"
    env_file: .env
    depends_on:
      - schema-registry
      - oidc-provider-gui
      - postgres-event-cache
      - aggregator

  api:
    container_name: api
    networks:
      dittnav.docker-internal:
        aliases:
          - api.dittnav.docker-internal
    image: "docker.pkg.github.com/navikt/dittnav-api/dittnav-api:latest"
    mem_limit: '768m'
    mem_reservation: '580m'
    ports:
      - "8091:8080"
    env_file: .env
    environment:
      LEGACY_API_URL: "http://legacy.dittnav.docker-internal:8080/person/dittnav-legacy-api"
      EVENT_HANDLER_URL: "http://handler.dittnav.docker-internal:8080"
      CORS_ALLOWED_ORIGINS: "*"
      INNLOGGINGSSTATUS_URL: "http://dummy.io"
      UNLEASH_API_URL: "fake"
    depends_on:
      - oidc-provider
      - handler
      - legacy

  legacy:
    container_name: legacy
    networks:
      dittnav.docker-internal:
        aliases:
          - legacy.dittnav.docker-internal
    image: "docker.pkg.github.com/navikt/dittnav-legacy-api/dittnav-legacy-api:latest"
    mem_limit: '2gb'
    mem_reservation: '2gb'
    ports:
      - "8090:8080"
    environment:
      NAIS_APP_NAME: "dittnav-legacy-api"
      NAIS_NAMESPACE: "localhost"
      AAD_B2C_DISCOVERY_URL: ${OIDC_DISCOVERY_URL}
      AAD_B2C_CLIENTID_USERNAME: ${OIDC_ACCEPTED_AUDIENCE}
      EXTERNAL_USERS_AZUREAD_B2C_EXPECTED_AUDIENCE: ${OIDC_ISSUER}
      LOGINSERVICE_IDPORTEN_DISCOVERY_URL: "http://oidc-provider.dittnav.docker-internal:9000/.well-known/openid-configuration"
      LOGINSERVICE_IDPORTEN_AUDIENCE: "stubOidcClient"
      DITTNAV_LEGACY_API_TPS_PROXY_API_APIKEY_USERNAME: "dummyApiKey"
      DITTNAV_LEGACY_API_TPS_PROXY_API_APIKEY_PASSWORD: "dummyApiPassword"
      TJENESTER_URL: "https://dummyTjenester.nav.no"
      SAKSOVERSIKT_API_URL: "http://mocks.dittnav.docker-internal:8080/saksoversikt-api"
      TPS_PROXY_API_V1_NAVN_URL: "http://mocks.dittnav.docker-internal:8080/tpsproxy/"
      MININNBOKS_API_URL: "http://mocks.dittnav.docker-internal:8080/mininnboks-api"
      MELDEKORT_API_URL: "http://mocks.dittnav.docker-internal:8080/meldekort-api"
      OPPFOLGING_URL: "http://mocks.dittnav.docker-internal:8080/oppfolging"
      VARSELINNBOKS_URL: "http://mocks.dittnav.docker-internal:8080/person/varselinnboks"
      CORS_ALLOWED_ORIGINS: ".nav.no,.oera-q.local"
      # Dette er et lite hack for å slippe at loggen oversvømmes av meldinger om at sensu-hosten ikke finnes.
      sensu_client_host: "localhost"
      sensu_client_port: "8080"

  mocks:
    container_name: mocks
    networks:
      dittnav.docker-internal:
        aliases:
          - mocks.dittnav.docker-internal
    image: "docker.pkg.github.com/navikt/pb-nav-mocked/pb-nav-mocked:latest"
    ports:
      - "8095:8080"
    env_file: .env
    environment:
      CORS_ALLOWED_ORIGINS: "*"
      OIDC_ISSUER: ${OIDC_ISSUER}
      OIDC_ACCEPTED_AUDIENCE: ${OIDC_ACCEPTED_AUDIENCE}
      OIDC_JWKS_URI: "http://oidc-provider.dittnav.docker-internal:9000/certs"
    depends_on:
      - oidc-provider
      - schema-registry

  producer:
    container_name: producer
    networks:
      dittnav.docker-internal:
        aliases:
          - producer.dittnav.docker-internal
    image: "docker.pkg.github.com/navikt/dittnav-event-test-producer/dittnav-event-test-producer:latest"
    mem_limit: '512m'
    mem_reservation: '256m'
    ports:
      - "8094:8080"
    env_file: .env
    environment:
      CORS_ALLOWED_ORIGINS: "*"
    depends_on:
      - oidc-provider-gui
      - postgres-event-cache
      - schema-registry

  tidslinje:
    container_name: tidslinje
    networks:
      dittnav.docker-internal:
        aliases:
          - tidslinje.dittnav.docker-internal
    image: "docker.pkg.github.com/navikt/dittnav-tidslinje-api/dittnav-tidslinje-api:latest"
    mem_limit: '768m'
    mem_reservation: '580m'
    ports:
      - "8099:8080"
    env_file: .env
    environment:
      EVENT_HANDLER_URL: "http://handler.dittnav.docker-internal:8080"
      CORS_ALLOWED_ORIGINS: "*"
    depends_on:
      - oidc-provider
      - handler

  dekoratoren:
    container_name: dekoratoren
    networks:
      dittnav.docker-internal:
        aliases:
          - dekoratoren.dittnav.docker-internal
    image: "navikt/nav-dekoratoren:latest"
    mem_limit: '1500m'
    mem_reservation: '1500m'
    ports:
      - "8100:8088"
    environment:
      XP_BASE_URL: 'https://www-q1.nav.no'
      APP_BASE_URL: "http://localhost:8100/dekoratoren"
      API_XP_MENY_URL: 'https://www-q1.nav.no/_/service/no.nav.navno/menu'
      API_XP_SOK_URL: 'https://www-q1.nav.no/_/service/navno.nav.no.search/search2/sok'
      API_INNLOGGINGSLINJE_URL: 'http://mocks.dittnav.docker-internal:8080/innloggingslinje-api/auth'
      API_VARSELINNBOKS_URL: 'http://mocks.dittnav.docker-internal:8080/person/varselinnboks'
      MINSIDE_ARBEIDSGIVER_URL: 'https://arbeidsgiver-q.nav.no/min-side-arbeidsgiver/'
      DITT_NAV_URL: 'http://localhost:3000/person/dittnav/'
      LOGIN_URL: 'http://localhost:5000'
      LOGOUT_URL: 'http://localhost:5000/?logout'

  frontend:
    container_name: frontend
    networks:
      dittnav.docker-internal:
        aliases:
          - frontend.dittnav.docker-internal
    image: "docker.pkg.github.com/navikt/dittnav/dittnav:latest"
    mem_limit: '768m'
    mem_reservation: '512m'
    ports:
      - "3000:8080"
    environment:
      NAIS_APP_NAME: "dittnav"
      NAV_DEKORATOREN_URL: "http://dekoratoren.dittnav.docker-internal:8088"
      NAIS_NAMESPACE: "localhost"
      DITTNAV_LEGACY_API_URL: "http://localhost:8091/person/dittnav-api"
      DITTNAV_API_URL: "http://localhost:8091/person/dittnav-api"
      TJENESTER_URL: "http://dummyTjenester.nav.no"
      EVENT_TEST_PRODUCER_URL: "http://localhost:8094/person/dittnav-event-test-producer"
      NAVNO_URL: "www.nav.no"
      LOGIN_URL: "http://localhost:5000?redirect=http://localhost:3000"
      VTA_URL: "http://dummyVeientilarbeid.nav.no"
      INNLOGGINGSLINJE_API_URL: "http://localhost:8095/innloggingslinje-api"
      INNLOGGINGSSTATUS_URL: "http://localhost:8095/innloggingslinje-api"
      ARBEIDSSOKERREGISTRERING_URL: "http://dummyArbeidssokerregistrering.nav.no"
      TEST_SIDE_FEATURE_TOGGLE: "true"
      AKTIVITETSPLAN_URL: "http://dummyAktivitetsplan.nav.no"
      SYKDOM_I_FAMILIEN_URL: "http://dummySykdomIFamilien.nav.no"
      VEILEDERARBEIDSSOKER_URL: "http://dummyVeilederArbeidssoker.nav.no"
      VARSLINGER_FEATURE_TOGGLE: "false"
      LOGIN_LEVEL_4_URL: "http://dummyloginLevel4.nav.no"
      TIDSLINJE_URL: "http://dummyTidslinje.nav.no"
      TIDSLINJE_PRODUSENT: "produsent"
      # Dette er et lite hack for å slippe at loggen oversvømmes av meldinger om at sensu-hosten ikke finnes.
      sensu_client_host: "localhost"
      sensu_client_port: "8080"

  varselbestiller:
    container_name: varselbestiller
    networks:
      dittnav.docker-internal:
        aliases:
          - varselbestiller.dittnav.docker-internal
    image: "docker.pkg.github.com/navikt/dittnav-varselbestiller/dittnav-varselbestiller:latest"
    mem_limit: '1200m'
    mem_reservation: '1024m'
    ports:
      - "8098:8080"
    env_file: .env
    environment:
      NAIS_CLUSTER_NAME: "local"
      NAIS_NAMESPACE: "localhost"
      DB_HOST: "postgres-varselbestiller.dittnav.docker-internal:5432"
      DB_NAME: "dittnav-varselbestiller"
      SENSU_HOST: "stub"
      SENSU_PORT: ""
      GROUP_ID: "dittnav_varselbestiller"
      POLL_BESKJED_TO_DOKNOTIFIKASJON: "true"
      POLL_OPPGAVE_TO_DOKNOTIFIKASJON: "true"
      POLL_DONE_TO_DOKNOTIFIKASJON_STOPP: "true"
      EVENT_HANDLER_URL: "http://handler.dittnav.docker-internal:8080"
    depends_on:
      - schema-registry
      - postgres-varselbestiller

volumes:
  dittnav-event-cache-data:
  dittnav-varselbestiller-data:

networks:
  dittnav.docker-internal:
